<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{00365483-5d88-45fc-a170-387a94ee135a}</ProjectGuid>
    <RootNamespace>yosemite</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>NotSet</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <CustomBuildBeforeTargets>
    </CustomBuildBeforeTargets>
  </PropertyGroup>
  <PropertyGroup Label="Vcpkg">
    <VcpkgEnabled>false</VcpkgEnabled>
    <VcpkgManifestInstall>false</VcpkgManifestInstall>
    <VcpkgAutoLink>false</VcpkgAutoLink>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_GLFW_WIN32;GLFW_EXPOSE_NATIVE_WIN32;VK_USE_PLATFORM_WIN32_KHR;CONSOLE;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>extern\glfw\include;$(VULKAN_SDK)\Include;extern\volk;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
      <Message>
      </Message>
      <Outputs>
      </Outputs>
      <Inputs>
      </Inputs>
    </CustomBuildStep>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator %(FullPath) -V -o src/shaders/%(Filename).spv</Command>
      <Message>
      </Message>
      <Outputs>src/shaders/%(Filename).spv</Outputs>
      <LinkObjects>false</LinkObjects>
      <BuildInParallel>true</BuildInParallel>
      <AdditionalInputs>%(FullPath)</AdditionalInputs>
    </CustomBuild>
    <PostBuildEvent>
      <Command>for %%f in (*.vert *.tesc *.tese *.geom *.frag *.comp) do $(VULKAN_SDK)\Bin\glslangValidator.exe -V -o $(OutDir)%%f.spv %%f
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>_CRT_SECURE_NO_WARNINGS;_GLFW_WIN32;GLFW_EXPOSE_NATIVE_WIN32;VK_USE_PLATFORM_WIN32_KHR;CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>extern\glfw\include;$(VULKAN_SDK)\Include;extern\volk;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <LanguageStandard_C>stdc17</LanguageStandard_C>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(VULKAN_SDK)\Lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <CustomBuildStep>
      <Command>
      </Command>
      <Message>
      </Message>
      <Outputs>
      </Outputs>
      <Inputs>
      </Inputs>
    </CustomBuildStep>
    <CustomBuild>
      <Command>$(VULKAN_SDK)\Bin\glslangValidator %(FullPath) -V -o src/shaders/%(Filename).spv</Command>
      <Message>
      </Message>
      <Outputs>src/shaders/%(Filename).spv</Outputs>
      <LinkObjects>false</LinkObjects>
      <BuildInParallel>true</BuildInParallel>
      <AdditionalInputs>%(FullPath)</AdditionalInputs>
    </CustomBuild>
    <PostBuildEvent>
      <Command>for %%f in (*.vert *.tesc *.tese *.geom *.frag *.comp) do $(VULKAN_SDK)\Bin\glslangValidator.exe -V -o $(OutDir)%%f.spv %%f
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="extern\glfw\src\context.c" />
    <ClCompile Include="extern\glfw\src\egl_context.c" />
    <ClCompile Include="extern\glfw\src\init.c" />
    <ClCompile Include="extern\glfw\src\input.c" />
    <ClCompile Include="extern\glfw\src\monitor.c" />
    <ClCompile Include="extern\glfw\src\null_init.c" />
    <ClCompile Include="extern\glfw\src\null_joystick.c" />
    <ClCompile Include="extern\glfw\src\null_monitor.c" />
    <ClCompile Include="extern\glfw\src\null_window.c" />
    <ClCompile Include="extern\glfw\src\osmesa_context.c" />
    <ClCompile Include="extern\glfw\src\platform.c" />
    <ClCompile Include="extern\glfw\src\vulkan.c" />
    <ClCompile Include="extern\glfw\src\wgl_context.c" />
    <ClCompile Include="extern\glfw\src\win32_init.c" />
    <ClCompile Include="extern\glfw\src\win32_joystick.c" />
    <ClCompile Include="extern\glfw\src\win32_module.c" />
    <ClCompile Include="extern\glfw\src\win32_monitor.c" />
    <ClCompile Include="extern\glfw\src\win32_thread.c" />
    <ClCompile Include="extern\glfw\src\win32_time.c" />
    <ClCompile Include="extern\glfw\src\win32_window.c" />
    <ClCompile Include="extern\glfw\src\window.c" />
    <ClCompile Include="extern\volk\volk.c" />
    <ClCompile Include="src\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="extern\glfw\src\null_joystick.h" />
    <ClInclude Include="extern\glfw\src\null_platform.h" />
    <ClInclude Include="extern\glfw\src\platform.h" />
    <ClInclude Include="extern\glfw\src\win32_joystick.h" />
    <ClInclude Include="extern\glfw\src\win32_platform.h" />
    <ClInclude Include="extern\glfw\src\win32_thread.h" />
    <ClInclude Include="extern\glfw\src\win32_time.h" />
    <ClInclude Include="extern\volk\volk.h" />
  </ItemGroup>
  <ItemGroup>
    <CustomBuild Include="src\shaders\mesh.frag.glsl">
      <FileType>Document</FileType>
    </CustomBuild>
    <CustomBuild Include="src\shaders\mesh.vert.glsl">
      <FileType>Document</FileType>
    </CustomBuild>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>